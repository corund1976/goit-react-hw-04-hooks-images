{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","service/api.js","components/Container/Container.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button .jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","setParams","searchQuery","pagePagination","params","key","q","image_type","orientation","safesearch","page","per_page","a","get","response","data","hits","console","log","Container","children","className","s","container","Searchbar","onSubmit","useState","searchString","setSearchString","resetForm","SearchForm","e","preventDefault","trim","alert","type","SearchForm_button","SearchForm_button__label","SearchForm_input","value","onChange","target","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","webformatURL","largeImageURL","tags","onShowModal","onClick","modalImage","src","alt","ImageGalleryItem_image","ImageGallery","images","map","id","Button","onLoadMore","buttonWrapper","LoaderSpinner","Loader","color","height","width","timeout","Modal","onToggleModalStatus","useEffect","handleKeyEsc","code","window","addEventListener","removeEventListener","Overlay","currentTarget","App","search","setSearch","setImages","pagination","setPagination","error","setError","isLoading","setIsLoading","setModalImage","modalIsHidden","setModalIsHidden","fetchImages","getDataServer","then","newImages","length","Promise","reject","Error","prevImages","catch","finally","handleToggleModalStatus","useCallback","prevModalIsHidden","scrollTo","top","document","documentElement","scrollHeight","behavior","message","prevPagination","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd1c6f34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem___yqG4\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__1ONgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2mVST\",\"buttonWrapper\":\"Button_buttonWrapper__bQwcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1LuRk\",\"Modal\":\"Modal_Modal__31Pib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2d7w9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2BYys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3mdQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3kkOy\",\"SearchForm\":\"Searchbar_SearchForm__3AZhF\",\"SearchForm_button\":\"Searchbar_SearchForm_button__28WrT\",\"SearchForm_button__label\":\"Searchbar_SearchForm_button__label__St24_\",\"SearchForm_input\":\"Searchbar_SearchForm_input__1ifGI\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\r\n  \r\nconst setParams = (searchQuery, pagePagination) =>\r\n  (axios.defaults.params = {\r\n    key: \"23749479-af26a543787f3771d684a474e\",\r\n    q: searchQuery,\r\n    image_type: \"photo\",\r\n    orientation: \"horizontal\",\r\n    safesearch: \"true\",\r\n    page: pagePagination,\r\n    per_page: 12\r\n  });\r\n\r\nexport async function getDataServer(searchQuery, pagePagination) {\r\n  setParams(searchQuery, pagePagination);\r\n  try {\r\n    const response = await axios.get();\r\n    return response.data.hits;\r\n  }\r\n  catch (error) {\r\n    console.log('error: ', error);\r\n    throw error;\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [searchString, setSearchString] = useState('');\r\n\r\n  const handleChange = e => setSearchString(e.target.value);\r\n    \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    if (searchString.trim() === '') {\r\n      alert(\"Введите запрос для поиска...\");\r\n      return;\r\n    };\r\n    \r\n    onSubmit(searchString);\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => setSearchString('');\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchForm_button}>\r\n          <span className={s.SearchForm_button__label}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchForm_input}\r\n          type=\"text\"\r\n          value={searchString}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired\r\n};","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ image: { webformatURL, largeImageURL, tags }, onShowModal}) {\r\n  return (\r\n    <li\r\n      className={s.ImageGalleryItem}\r\n      onClick={() =>\r\n        onShowModal({\r\n          modalImage: {\r\n            largeImageURL,\r\n            tags\r\n          }\r\n        })\r\n      }>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={s.ImageGalleryItem_image} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onShowModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\n// webformatURL={webformatURL} // webformatURL - ссылка на маленькое изображение для списка карточек\r\n// largeImageURL={largeImageURL} // largeImageURL - ссылка на большое изображение для модального окна\r\n// tags={tags} // tags - поисковые тэги для изображения на Pixabay","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({images, onShowModal}) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(({ id, ...image }) => {\r\n        return (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            image={image}\r\n            onShowModal={onShowModal}>\r\n          </ImageGalleryItem>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })).isRequired,\r\n  onShowModal: PropTypes.func.isRequired\r\n};\r\n\r\n// id - уникальный идентификатор от Pixabay","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onLoadMore }) => {\r\n  return (\r\n    <div className={s.buttonWrapper}>\r\n      <button type=\"button\" className={s.Button} onClick={onLoadMore}>\r\n        Load more...\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nfunction LoaderSpinner () {\n  return (\n    <Loader\n      className={s.Loader}\n      type=\"MutatingDots\"\n      color=\"#3f51b5\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default LoaderSpinner;","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nfunction Modal({ modalImage: {largeImageURL, tags}, onToggleModalStatus }) {\r\n  const handleClickBackdrop = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onToggleModalStatus();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyEsc = e => {\r\n      if (e.code === 'Escape') {           //e.keyCode === 27\r\n        onToggleModalStatus();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyEsc);\r\n    \r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyEsc);\r\n    };\r\n  }, [onToggleModalStatus]);\r\n\r\n  return (\r\n    <div className={s.Overlay} onClick={handleClickBackdrop}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImageURL} alt={tags}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  onToggleModalStatus: PropTypes.func.isRequired,\r\n  modalImage: PropTypes.shape({\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired\r\n  }).isRequired\r\n};","import { useState, useEffect, useCallback } from 'react';\nimport { getDataServer } from './service/api';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\n\nimport './App.css';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  const [images, setImages] = useState([]);\n  const [pagination, setPagination] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [modalImage, setModalImage] = useState({});\n  const [modalIsHidden, setModalIsHidden] = useState(true);\n  // Получение данных с сервера\n  const fetchImages = () => {\n    setIsLoading(true);\n    // Запрос данных с сервера\n    getDataServer(search, pagination)\n      .then(newImages => {\n        if (newImages.length===0) {\n          return Promise.reject(\n           new Error(`There is no pictures by ${search} name, please try another request`));\n        } else {\n          setImages(prevImages => [...(prevImages || []), ...newImages]);\n        }\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  };\n  // Поиск Searchbar\n  const handleFormSubmit = searchString => {\n    setSearch(searchString);\n    setImages([]);\n    setPagination(1);\n    setError(null);\n  };\n  // Модалка мемоизирована\n  const handleToggleModalStatus = useCallback(() => {\n    setModalIsHidden(prevModalIsHidden => !prevModalIsHidden);\n  },[])\n\n  const handleShowModalClick = ({ modalImage }) => {\n    setModalImage({ ...modalImage });\n    handleToggleModalStatus();\n  };\n  // Кнопка LoadMore...\n  const handleLoadMoreClick = () => {\n    setPagination(prevPagination => prevPagination + 1);\n  };\n\n  useEffect(() => {\n    if (search === '') return; //при пустой строке поиска = не показывать никакие картинки\n\n    fetchImages();\n  }, [pagination, search]);\n\n  useEffect(() =>{\n    if (pagination > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  }, [images]);\n\n  return (\n    <Container>\n\n      <Searchbar\n        onSubmit={handleFormSubmit} />\n      \n        {error &&\n      <h1>{error.message}</h1>}\n\n      <ImageGallery\n        images={images}\n        onShowModal={handleShowModalClick} />\n\n        {isLoading &&\n      <Loader />}\n      \n        {!!images.length && !isLoading &&\n      <Button\n        onLoadMore={handleLoadMoreClick} />}\n\n        {!modalIsHidden && \n      <Modal\n        onToggleModalStatus={handleToggleModalStatus}\n        modalImage={modalImage} />}\n      \n    </Container>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}